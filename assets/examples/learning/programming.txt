In COBOL programming, managing file input and output operations is essential for handling structured data.
One of the most common types of files in COBOL is the VSAM (Virtual Storage Access Method) file,
which stores data in an indexed format. When writing a COBOL program to interact with VSAM files,
there are key sections involved:

- IDENTIFICATION DIVISION: This section provides metadata about the program, such as the program name.
- ENVIRONMENT DIVISION: Specifies the file system and access methods, including the type of file (VSAM), organization (indexed), and access mode (sequential).
- DATA DIVISION: Defines the data structures, including the format of records in the file and any working storage required.
- PROCEDURE DIVISION: Contains the logic for performing operations on the file, such as opening the file, reading records, and displaying or processing the data.

Example COBOL Program to Read Data from a VSAM File:

This example shows a COBOL program that reads employee data from a VSAM file and displays it.
The file is assumed to contain employee ID, name, and salary information.


IDENTIFICATION DIVISION.
PROGRAM-ID. DISPLAY-EMPLOYEES.

ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT EMP-FILE ASSIGN TO "EMP.VSAM.FILE"
    ORGANIZATION IS INDEXED
    ACCESS MODE IS SEQUENTIAL
    FILE STATUS IS EMP-STATUS.

DATA DIVISION.
FILE SECTION.
FD EMP-FILE.
01 EMP-RECORD.
   05 EMP-ID      PIC X(5).
   05 EMP-NAME    PIC X(30).
   05 EMP-SALARY  PIC 9(9)V99.

WORKING-STORAGE SECTION.
01 EMP-STATUS     PIC XX.

PROCEDURE DIVISION.
OPEN-FILE.
    OPEN INPUT EMP-FILE.
    IF EMP-STATUS NOT = "00"
        DISPLAY "ERROR OPENING FILE"
        STOP RUN.

READ-FILE.
    READ EMP-FILE INTO EMP-RECORD
        AT END
            DISPLAY "END OF FILE"
            CLOSE EMP-FILE
            STOP RUN.
    DISPLAY "ID: " EMP-ID ", NAME: " EMP-NAME ", SALARY: " EMP-SALARY.
    GO TO READ-FILE.
